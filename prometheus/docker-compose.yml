services:
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    user: '0'
    restart: unless-stopped
    volumes:
      - /docker/prometheus/config/prometheus:/etc/prometheus
      - /docker/prometheus/data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - prometheus
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.routers.prometheus.tls.certresolver=letsencrypt
      - traefik.http.routers.prometheus.rule=Host(`REPLACE_ME`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.service=prometheus
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      - traefik.http.routers.prometheus.middlewares=services@file

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - /docker/prometheus/config/alertmanager/:/etc/alertmanager/
    networks:
      - prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    user: '0'
    depends_on:
      - prometheus
    volumes:
      - /docker/prometheus/data/grafana:/var/lib/grafana
      - /docker/prometheus/config/grafana/provisioning/:/etc/grafana/provisioning/
      - /docker/prometheus/config/grafana/ldap.toml:/etc/grafana/ldap.toml
    env_file:
      - /docker/prometheus/config/grafana/config.monitoring
    networks:
      - prometheus
      - lldap
      - traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
      - traefik.http.routers.grafana.rule=Host(`REPLACE_ME`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.service=grafana
      - traefik.http.services.grafana.loadbalancer.server.port=3000

networks:
  prometheus:
    external: true
  traefik:
    external: true
  lldap:
    external: true